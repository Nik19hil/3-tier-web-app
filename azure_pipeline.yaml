trigger:
  branches:
    include: ['none']
      
pool:
  name: 'Agent-1'
  demands:
    - agent.name -equals agent1
    - npm
    - node.js
    - kubectl
    - java

variables:
  dockerRegistryServiceConnection: 'MyDockerHub'
  githubServiceConnection: 'GitHub'
  GIT_REPO_NAME: '3-tier-web-app'
  GIT_USER_NAME: 'Nik19hil'
  DOCKER_USER_NAME: 'docknik19'
  DOCKER_REPO_NAME: 'webapp-backend'
  IMAGE_TAG: $(Build.BuildId)

stages:
  - stage: CleanWorkspace
    jobs:
      - job: Clean
        steps:
          - checkout: none
          - script: |
              echo "Cleaning workspace"
              sudo rm -rf *
            displayName: 'Clean workspace'

  - stage: CheckoutCode
    jobs:
      - job: Checkout
        steps:
          - checkout: self

  - stage: DockerHubPush
    jobs:
      - job: PushToDockerHub
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'MyDockerHub'
              repository: 'docknik19/webapp-backend'
              command: 'buildAndPush'
              Dockerfile: 'Application-Code/backend/Dockerfile'
              tags: $(IMAGE_TAG)

  - stage: DeployToKubernetes
    jobs:
      - job: DeployBackend
        steps:
          - script: |
              echo "Updating image tag in deployment file"
              cd Kubernetes-Manifests-file/Backend
              sed -i 's|{Imagetag}|$(IMAGE_TAG)|g' deployment-backend.yaml
            displayName: 'Update image tag in local YAML'
          - script: |
              echo "Applying deployment to Kubernetes cluster"
          - task: KubernetesManifest@1
            displayName: 'Deploy backend to Kubernetes'
            inputs:
                action: 'deploy'
                connectionType: 'kubernetesServiceConnection'
                kubernetesServiceConnection: 'AKSCluster'
                namespace: 'web-app'
                manifests: 'Kubernetes-Manifests-file/Backend/deployment-backend.yaml'            
